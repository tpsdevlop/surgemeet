"""
Django settings for web_project project.

Generated by 'django-admin startproject' using Django 4.1.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import certifi

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ro8b0fdp&=^(+5b!(1-n5-d)%4rlke8rghyil(!=5-8+ujf259'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djongo',
    'rest_framework',
    'corsheaders',
    'web_app',
    'student',
    'trainer',
    'colleges',
    'branches',
    'userauth',
    'meetsessions',
    'googleMeet',
    'internshipreport'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',

]
# CORS_ALLOW_HEADERS = [
#     'authorization',
#     'content-type',
#     'accept',
#     'x-requested-with',
#     'x-csrftoken',
# ]

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOW_METHODS = [
#     'GET',
#     'POST',
#     'PUT',
#     'PATCH',
#     'DELETE',
#     'OPTIONS'
# ]
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000', 
    'http://127.0.0.1:5500', 
    'http://127.0.0.1:5501',
    'http://localhost:5173', 
    'https://surgemeetlink.azurewebsites.net/',
]
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'https://surgemeet.azurewebsites.net/',
]




CSRF_TRUSTED_ORIGINS=[ 'http://localhost:3000' ,'https://surgemeetlink.azurewebsites.net/']

ROOT_URLCONF = 'web_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'web_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'dontdeletewithoutbackup5',
#         'ENFORCE_SCHEMA': False,  
#         'CLIENT': {
#             'host': 'mongodb+srv://deepakramanujam321:o8rPuwKDidIAWWDf@cluster0.fwvqbjh.mongodb.net/',
#             'username': 'deepakramanujam321',
#             'password': 'o8rPuwKDidIAWWDf',
#             'authMechanism': 'SCRAM-SHA-1',
#         }
#     }
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'dontdeletewithoutbackup1',
#         'ENFORCE_SCHEMA': False,  
#         'CLIENT': {
#             'host': 'mongodb+srv://kecoview:FVy5fqqCtQy3KIt6@cluster0.b9wmlid.mongodb.net/',
#             'username': 'kecoview',
#             'password': 'FVy5fqqCtQy3KIt6',
#             'authMechanism': 'SCRAM-SHA-1',
#         }
#     }
# }
# ++++++++++++++++++++++++++++++++++++++++++++
# Live database
from urllib.parse import quote_plus
uname = 'EUAdmin'
pwd = 'EUServer@sa123'
escaped_username = quote_plus(uname)
escaped_password = quote_plus(pwd)
uri = f"mongodb+srv://{escaped_username}:{escaped_password}@eucluster.mongocluster.cosmos.azure.com/?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000"
DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'ExskilenceDb',
        'ENFORCE_SCHEMA': False,  
        'CLIENT': {
            'host': uri,
            'username': uname,
            'password': pwd,
            'authMechanism': 'SCRAM-SHA-256',
        }
    }
}
# ++++++++++++++++++++++++++++++++++++++++++++++


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

AZURE_ACCOUNT_NAME = 'storeholder'
AZURE_ACCOUNT_KEY = 'QxlUJdp8eSoPeQPas4NigSkXg6KMep7z+fPQ5CpPm0kRfjg7Q0lFmVEIyhU4ohFLFdSqntDAG6MY84elTfecnw=='
AZURE_CONTAINER = 'tpdata'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'kecoview@gmail.com'  # Replace with your Gmail address
EMAIL_HOST_PASSWORD = 'etbk kimg ghtn yjgj'  # Replace with your Gmail app password

# Use certifi's CA file
EMAIL_TLS_CA_FILE = certifi.where()
